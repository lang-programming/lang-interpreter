lang.version = v1.0.0
lang.name = Lang Standard Implementation (&BasicIterator)

class &BasicIterator {
    -final:$value{OBJECT|BYTE_BUFFER|ARRAY|LIST|STRUCT|TEXT}
    -$index{INT}

    +construct = ($value{OBJECT|BYTE_BUFFER|ARRAY|LIST|STRUCT|TEXT}):{VOID} -> {
        ::$value $= $value
        ::$index $= 0
    }

    +op:iter = ():{OBJECT} -> {
        return &this
    }

    +op:hasNext = ():{INT} -> {
        return parser.op(::$index < @::$value)
    }

    +op:next = () -> {
        if(::$index >= @::$value) {
            throw $LANG_ERROR_INDEX_OUT_OF_BOUNDS
        }

        $value
        if(::$value ~~ $LANG_TYPE_STRUCT) {
            $members $= fn.structGetMemberNames(::$value)
            if(fn.structIsDefinition(::$value)) {
                $value $= $members[::$index]
            }else {
                $member $= $members[::$index]
                $value $= &Pair($member, ::$value[$member])
            }
        }else {
            $value $= ::$value[::$index]
        }

        ::$index += 1

        return $value
    }

    +to:text = ():{TEXT} -> {
        return "<Iterator>"
    }
}
