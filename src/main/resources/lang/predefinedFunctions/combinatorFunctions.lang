lang.version = v1.0.0
lang.name = Lang Standard Implementation (Combinator Functions)

## Combinator execution: a(b)
function combinator combA($a{FUNCTION_POINTER}, $b) {
    return $a($b)
}

## Combinator execution: a()
function combinator combA0($a{FUNCTION_POINTER}) {
    return $a()
}

## Combinator execution: a(b, c)
function combinator combA2($a{FUNCTION_POINTER}, $b, $c) {
    return $a($b, $c)
}

## Combinator execution: a(b, c, d)
function combinator combA3($a{FUNCTION_POINTER}, $b, $c, $d) {
    return $a($b, $c, $d)
}

## Combinator execution: a(b, c, d, e)
function combinator combA4($a{FUNCTION_POINTER}, $b, $c, $d, $e) {
    return $a($b, $c, $d, $e)
}

## Combinator execution: a()
function combinator combAE($a{FUNCTION_POINTER}, $b) {
    return $a()
}

# TODO combAN
# TODO combAV

## Combinator execution: a(b, d, c)
function combinator combAX($a{FUNCTION_POINTER}, $b, $c, $d) {
    return $a($b, $d, $c)
}

# TODO combAZ

## Combinator execution: a(b(c))
function combinator combB($a{FUNCTION_POINTER}, $b{FUNCTION_POINTER}, $c) {
    return $a($b($c))
}

## Combinator execution: a(b())
function combinator combB0($a{FUNCTION_POINTER}, $b{FUNCTION_POINTER}) {
    return $a($b())
}

## Combinator execution: a(b(c), b(d))
function combinator combB2($a{FUNCTION_POINTER}, $b{FUNCTION_POINTER}, $c, $d) {
    return $a($b($c), $b($d))
}

## Combinator execution: a(b(c), b(d), b(e))
function combinator combB3($a{FUNCTION_POINTER}, $b{FUNCTION_POINTER}, $c, $d, $e) {
    return $a($b($c), $b($d), $b($e))
}

## Combinator execution: a(b())
function combinator combBE($a{FUNCTION_POINTER}, $b{FUNCTION_POINTER}, $c) {
    return $a($b())
}

# TODO combBN
# TODO combBV

## Combinator execution: a(b(c, d))
function combinator combBX($a{FUNCTION_POINTER}, $b{FUNCTION_POINTER}, $c, $d) {
    return $a($b($c, $d))
}

# TODO combBZ
